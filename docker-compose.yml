version: '3.7'

services:
  app:
    build: ./
    command: 
      - /bin/sh
      - -c
      - |
        ./check-out-db.sh db
        migrate -source file://database/migration -database postgres://feedback_app:qwerty1234@db:5432/feedback_app?sslmode=disable up
        ./app
    ports:
      - 80:80
    environment:
      - DB_PASSWORD=qwerty1234
    depends_on:
      - db
      - memcached
      - broker
      - kafka-setup
    restart: always
  db:
    image: postgres
    volumes:
      - sqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=qwerty1234
      - POSTGRES_USER=feedback_app
      - POSTGRES_DB=feedback_app
    ports:
      - 5434:5432
    restart: always

  memcached:
    image: memcached:latest
    ports:
        - 11213:11211
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    expose:
      - 9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-setup:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - broker
    volumes:
      - $PWD/connectors:/tmp/connectors
      - $PWD/dashboard:/tmp/dashboard
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker:29092 1 20 && \
                       kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic feedbacks --replication-factor 1 --partitions 1'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored


volumes:
  sqldata:


